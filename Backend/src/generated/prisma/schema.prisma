// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int           @id @default(autoincrement())
  userId    Int?          @unique
  firstName String
  lastName  String
  Bdate     DateTime?
  Telphone  String?
  Email     String?
  password  String
  ResumeURL String?
  Apply     Application[]
}

model Company {
  id          Int     @id @default(autoincrement())
  Name        String
  Overview    String?
  Industy     String?
  CompanySize String?
  YearEst     Int?
  GeneralBe   String?
  location    String
  Telcontact  String?
  WebsiteURL  String?
  password    String
  Job         Job[]
}

model Job {
  id            Int           @id @default(autoincrement())
  title         String
  Desciption    String?
  Responbility  String?
  Qualification String?
  Benenfit      String?
  workingHours  String?
  JobType       String
  minSalary     Int
  maxSalary     Int
  published     Boolean       @default(false)
  CompanyId     Int
  company       Company       @relation(fields: [CompanyId], references: [id])
  ApplicantList Application[]
  categories    Category[]
}

model Application {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  jobId     Int      @unique
  job       Job      @relation(fields: [jobId], references: [id])
  appliedAt DateTime @default(now())
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique
  Job  Job[]
}
